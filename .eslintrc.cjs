module.exports = {
  root: true,
  parser: '@typescript-eslint/parser',
  plugins: [
    '@typescript-eslint',
  ],
  extends: [
    'airbnb-typescript',
    'eslint:recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'plugin:@next/next/recommended'
  ],
  parserOptions: {
    sourceType: 'module',
    project: [
      './tsconfig.json',
      "./tailwind.config.js",
      "./postcss.config.js"
    ],
  },
  rules: {
    '@typescript-eslint/ban-ts-comment': [
      'error',
      {
        'ts-expect-error': 'allow-with-description',
        'ts-ignore': true,
        'ts-nocheck': true,
        'ts-check': false,
        minimumDescriptionLength: 5,
      },
    ],
    '@typescript-eslint/consistent-type-definitions': ['error', 'interface'],
    '@typescript-eslint/explicit-function-return-type': 'error',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/no-empty-function': [
      'error',
      { allow: ['arrowFunctions'] },
    ],
    '@typescript-eslint/no-explicit-any': 'error',
    '@typescript-eslint/no-non-null-assertion': 'off',
    '@typescript-eslint/no-var-requires': 'off',
    '@typescript-eslint/prefer-for-of': 'error',
    '@typescript-eslint/prefer-nullish-coalescing': 'error',
    '@typescript-eslint/prefer-optional-chain': 'error',
    '@typescript-eslint/unbound-method': 'off',
    '@typescript-eslint/prefer-as-const': 'error',
    '@typescript-eslint/restrict-template-expressions': [
      'error',
      {
        allowNumber: true,
        allowBoolean: true,
        allowAny: true,
        allowNullish: true,
        allowRegExp: true,
      },
    ],
    '@typescript-eslint/no-unused-vars': [
      'warn',
      { varsIgnorePattern: '^_', argsIgnorePattern: '^_' },
    ],
    'array-callback-return': ['off'],
    'arrow-body-style': ['off'],
    'arrow-parens': ['off'],
    'camelcase': ['off'],
    'comma-dangle': ['off'],
    'comma-spacing': ['error', { 'before': false, 'after': true }],
    'consistent-return': ['off'],
    'default-case': 'off',
    'dot-notation': 'off',
    'eol-last': ['off'],
    'eqeqeq': 'off',
    'func-names': ['off'],
    'guard-for-in': 'off',
    'global-require': ['off'],
    'import/prefer-default-export': ['off'],
    'import/no-extraneous-dependencies': 'off',
    'class-methods-use-this': ['off'],
    'indent': ['error', 4, { 'SwitchCase': 1 }],
    'import/first': 'off',
    'import/no-cycle': 'off',
    'import/order': 'off',
    'keyword-spacing': ['error', { 'after': true }],
    'lines-between-class-members': 'off',
    'linebreak-style': 'off',
    'max-len': 'off',
    'new-cap': 'off',
    'no-bitwise': 'off',
    'no-console': 'off',
    'no-class-assign': 'off',
    'no-constant-condition': 'off',
    'no-case-declarations': 'off',
    'no-else-return': 'off',
    'no-floating-decimal': 'off',
    'no-multi-assign': 'off',
    'no-mixed-operators': 'off',
    'no-nested-ternary': 'off',
    'no-path-concat': 'off',
    'no-param-reassign': 'off',
    'no-plusplus': 'off',
    'no-restricted-globals': 'off',
    'no-restricted-syntax': 'off',
    'no-return-assign': 'off',
    'no-self-compare': 'off',
    'no-shadow': 'off',
    'no-undef': 'off',
    'no-unused-vars': 'off',
    'no-unreachable': 'off',
    'no-unneeded-ternary': 'off',
    'no-useless-escape': 'off',
    'no-use-before-define': 'off',
    'no-useless-constructor': 'off',
    'no-throw-literal': 'off',
    'no-trailing-spaces': 'off',
    'no-var': ['off'],
    'object-shorthand': 'off',
    'object-curly-newline': 'off',
    'operator-linebreak': 'off',
    'padded-blocks': 'off',
    'prefer-arrow-callback': 'off',
    'prefer-template': 'off',
    'prefer-const': 'off',
    'prefer-destructuring': 'off',
    'quotes': ['error', 'single', { 'allowTemplateLiterals': true }],
    'quote-props': 'off',
    'semi': 'off',
    'space-before-function-paren': ['off'],
    'spaced-comment': ['off'],
    'space-in-parens': ['off'],
    'vars-on-top': ['off'],
    'wrap-iife': ['off'],
  }
};
